module.exports = function(grunt) {

    // 1. All configuration goes here 
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
        concat: {
            dist: {
                src: [
                    'js/*.js','!js/production.min.js',  '!js/production.min.js' // All JS in the libs folder
                ],
                dest: 'js/production.js'
            }
        },
        uglify: {
            build: {
                src: 'js/production.js',
                dest: 'js/production.min.js'
            }
        },
        imagemin: {
            dynamic: {
                files: [{
                        expand: true,
                        cwd: 'images_old/',
                        src: ['**/*.{png,jpg,gif}'],
                        dest: 'images/'
                    }]
            }
        },
        cssmin: {
            minify: {
                expand: true,
                src: ['css/*.css', '!css/*.min.css'],
                dest: '.',
                ext: '.min.css'
            }
        },
        /*watch: {
            scripts: {
                files:  ['css/*.css'],
                tasks: 'cssmin',
                options: {
                    spawn: false,
                },
            }
        }*/



    });



// 3. Where we tell Grunt we plan to use this plug-in.
    grunt.loadNpmTasks('grunt-contrib-concat');

    grunt.loadNpmTasks('grunt-contrib-uglify');

    grunt.loadNpmTasks('grunt-contrib-imagemin');

    grunt.loadNpmTasks('grunt-contrib-cssmin');

    grunt.loadNpmTasks('grunt-contrib-watch');


// 4. Where we tell Grunt what to do when we type "grunt" into the terminal.

    //grunt.registerTask('default', ['concat', 'uglify','imagemin','cssmin']);
	grunt.registerTask('default', ['imagemin']);
    //grunt.registerTask('default', ['watch']);

};
